import discord
import asyncio
from discord.ext import commands
import traceback
import sqlite3
import validators


class voice(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_voice_state_update(self, member, before, after):
        conn = sqlite3.connect('voice.db')
        c = conn.cursor()
        guildID = member.guild.id
        c.execute("SELECT voiceChannelID FROM guild WHERE guildID = ?", (guildID,))
        voice=c.fetchone()
        if voice is None:
            pass
        else:
            voiceID = voice[0]
            try:
                if after.channel.id == voiceID:
                    c.execute("SELECT * FROM voiceChannel WHERE userID = ?", (member.id,))
                    cooldown=c.fetchone()
                    if cooldown is None:
                        pass
                    else:
                        await member.send("–ù—è, —Ç—ã —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ —Å–æ–∑–¥–∞—ë—à—å –∫–∞–Ω–∞–ª—ã!")
                        await asyncio.sleep(15)
                    c.execute("SELECT voiceCategoryID FROM guild WHERE guildID = ?", (guildID,))
                    voice=c.fetchone()
                    c.execute("SELECT channelName, channelLimit FROM userSettings WHERE userID = ?", (member.id,))
                    setting=c.fetchone()
                    c.execute("SELECT channelLimit FROM guildSettings WHERE guildID = ?", (guildID,))
                    guildSetting=c.fetchone()
                    if setting is None:
                        name = f"{member.name}'s channel"
                        if guildSetting is None:
                            limit = 0
                        else:
                            limit = guildSetting[0]
                    else:
                        if guildSetting is None:
                            name = setting[0]
                            limit = setting[1]
                        elif guildSetting is not None and setting[1] == 0:
                            name = setting[0]
                            limit = guildSetting[0]
                        else:
                            name = setting[0]
                            limit = setting[1]
                    categoryID = voice[0]
                    id = member.id
                    category = self.bot.get_channel(categoryID)
                    channel2 = await member.guild.create_voice_channel(name,category=category)
                    channelID = channel2.id
                    await member.move_to(channel2)
                    await channel2.set_permissions(self.bot.user, connect=True,read_messages=True)
                    await channel2.edit(name= name, user_limit = limit)
                    c.execute("INSERT INTO voiceChannel VALUES (?, ?)", (id,channelID))
                    conn.commit()
                    def check(a,b,c):
                        return len(channel2.members) == 0
                    await self.bot.wait_for('voice_state_update', check=check)
                    await channel2.delete()
                    await asyncio.sleep(3)
                    c.execute('DELETE FROM voiceChannel WHERE userID=?', (id,))
            except:
                pass
        conn.commit()
        conn.close()

    @commands.command()
    async def help(self, ctx):
        embed = discord.Embed(title="–ü–æ–º–æ—â—å", description="",color=0x7289da)
        embed.set_author(name=ctx.message.author.display_name, icon_url=ctx.message.author.avatar_url)
        embed.add_field(name=f'**–ö–æ–º–∞–Ω–¥—ã**', value=f'**–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª:**\n\n`.voice lock`\n\n------------\n\n'
                        f'**–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª:**\n\n`.voice unlock`\n\n------------\n\n'
                        f'**–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:**\n\n`.voice name <name>`\n\n**–ü—Ä–∏–º–µ—Ä:** `.voice name –ê–º–æ–Ω–≥—É—Å`\n\n------------\n\n'
                        f'**–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–Ω–∞–ª–µ:**\n\n`.voice limit number`\n\n**–ü—Ä–∏–º–µ—Ä:** `.voice limit 2`\n\n------------\n\n'
                        f'**–†–∞–∑—Ä–µ—à–∏—Ç—å –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∫–∞–Ω–∞–ª—É:**\n\n`.voice permit @person`\n\n**–ü—Ä–∏–º–µ—Ä:** `.voice permit @Nyan+#8782`\n\n------------\n\n'
                        f'**–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≤–ª–∞–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º:**\n\n`.voice claim`\n\n**–ü—Ä–∏–º–µ—Ä:** `.voice claim`\n\n------------\n\n'
                        f'**–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∫–∞–Ω–∞–ª—É:**\n\n`.voice reject @person`\n\n**–ü—Ä–∏–º–µ—Ä:** `.voice reject @Nyan+#8782`\n\n', inline='false')
        embed.set_footer(icon_url="https://cdn.discordapp.com/avatars/780510408707932180/89c2612e9227173f8534b47817290427.png", text=f"–û–±—Ä–∞–±–æ—Ç–∞–ª–∞ –ù—è—à–∫–∞ –ö–∏–±–µ—Ä-–î–æ–∫–∏!")
        await ctx.channel.send(embed=embed)

    @commands.group()
    async def –≥–æ–ª–æ—Å(self, ctx):
        pass

    @–≥–æ–ª–æ—Å.command()
    async def setup(self, ctx):
        conn = sqlite3.connect('voice.db')
        c = conn.cursor()
        guildID = ctx.guild.id
        id = ctx.message.author.id
        if ctx.message.author.id == ctx.guild.owner_id:
            def check(m):
                return m.author.id == ctx.message.author.id
            await ctx.channel.send("**–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—É–¥–µ—Ç –¥–ª–∏—Ç—å—Å—è 60 —Å–µ–∫—É–Ω–¥**")
            await ctx.channel.send(f"**–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:(–ø—Ä–∏–º–µ—Ä: –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –ö–∞–Ω–∞–ª—ã)**")
            try:
                category = await self.bot.wait_for('message', check=check, timeout = 60.0)
            except asyncio.TimeoutError:
                await ctx.channel.send('–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ!')
            else:
                new_cat = await ctx.guild.create_category_channel(category.content)
                await ctx.channel.send('**–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∏–º—è –¥–ª—è –∫–∞–Ω–∞–ª–∞: (–ø—Ä–∏–º–µ—Ä: –ù–∞–∂–º–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è)**')
                try:
                    channel = await self.bot.wait_for('message', check=check, timeout = 60.0)
                except asyncio.TimeoutError:
                    await ctx.channel.send('–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ!')
                else:
                    try:
                        channel = await ctx.guild.create_voice_channel(channel.content, category=new_cat)
                        c.execute("SELECT * FROM guild WHERE guildID = ? AND ownerID=?", (guildID, id))
                        voice=c.fetchone()
                        if voice is None:
                            c.execute ("INSERT INTO guild VALUES (?, ?, ?, ?)",(guildID,id,channel.id,new_cat.id))
                        else:
                            c.execute ("UPDATE guild SET guildID = ?, ownerID = ?, voiceChannelID = ?, voiceCategoryID = ? WHERE guildID = ?",(guildID,id,channel.id,new_cat.id, guildID))
                        await ctx.channel.send("**–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!**")
                    except:
                        await ctx.channel.send("–í—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è \n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `.voice setup` –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!")
        else:
            await ctx.channel.send(f"{ctx.author.mention} –ù—è, —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞!")
        conn.commit()
        conn.close()

    @commands.command()
    async def setlimit(self, ctx, num):
        conn = sqlite3.connect('voice.db')
        c = conn.cursor()
        if ctx.author.id == ctx.guild.owner.id or ctx.author.id == 151028268856770560:
            c.execute("SELECT * FROM guildSettings WHERE guildID = ?", (ctx.guild.id,))
            voice=c.fetchone()
            if voice is None:
                c.execute("INSERT INTO guildSettings VALUES (?, ?, ?)", (ctx.guild.id,f"{ctx.author.name}'s channel",num))
            else:
                c.execute("UPDATE guildSettings SET channelLimit = ? WHERE guildID = ?", (num, ctx.guild.id))
            await ctx.send("–í—ã –∏–∑–º–µ–Ω–∏–ª–∏ –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–∞–Ω–∞–ª–∞!")
        else:
            await ctx.channel.send(f"{ctx.author.mention} –ù—è, —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞!")
        conn.commit()
        conn.close()

    @setup.error
    async def info_error(self, ctx, error):
        print(error)

    @–≥–æ–ª–æ—Å.command()
    async def –±–ª–æ–∫(self, ctx):
        conn = sqlite3.connect('voice.db')
        c = conn.cursor()
        id = ctx.author.id
        c.execute("SELECT voiceID FROM voiceChannel WHERE userID = ?", (id,))
        voice=c.fetchone()
        if voice is None:
            await ctx.channel.send(f"{ctx.author.mention} –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        else:
            channelID = voice[0]
            role = discord.utils.get(ctx.guild.roles, name='@everyone')
            channel = self.bot.get_channel(channelID)
            await channel.set_permissions(role, connect=False,read_messages=True)
            await ctx.channel.send(f'{ctx.author.mention} –ö–∞–Ω–∞–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω! üîí')
        conn.commit()
        conn.close()

    @–≥–æ–ª–æ—Å.command()
    async def —Ä–∞–∑–±–ª–æ–∫(self, ctx):
        conn = sqlite3.connect('voice.db')
        c = conn.cursor()
        id = ctx.author.id
        c.execute("SELECT voiceID FROM voiceChannel WHERE userID = ?", (id,))
        voice=c.fetchone()
        if voice is None:
            await ctx.channel.send(f"{ctx.author.mention} –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        else:
            channelID = voice[0]
            role = discord.utils.get(ctx.guild.roles, name='@everyone')
            channel = self.bot.get_channel(channelID)
            await channel.set_permissions(role, connect=True,read_messages=True)
            await ctx.channel.send(f'{ctx.author.mention} –ö–∞–Ω–∞–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω! üîì')
        conn.commit()
        conn.close()

    @–≥–æ–ª–æ—Å.command(aliases=["allow"])
    async def —Ä–∞–∑—Ä–µ—à–∏—Ç—å(self, ctx, member : discord.Member):
        conn = sqlite3.connect('voice.db')
        c = conn.cursor()
        id = ctx.author.id
        c.execute("SELECT voiceID FROM voiceChannel WHERE userID = ?", (id,))
        voice=c.fetchone()
        if voice is None:
            await ctx.channel.send(f"{ctx.author.mention} –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        else:
            channelID = voice[0]
            channel = self.bot.get_channel(channelID)
            await channel.set_permissions(member, connect=True)
            await ctx.channel.send(f'{ctx.author.mention} –í—ã —Ä–∞–∑—Ä–µ—à–∏–ª–∏ {member.name} –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É! ‚úÖ')
        conn.commit()
        conn.close()

    @–≥–æ–ª–æ—Å.command(aliases=["deny"])
    async def –∑–∞–ø—Ä–µ—Ç–∏—Ç—å(self, ctx, member : discord.Member):
        conn = sqlite3.connect('voice.db')
        c = conn.cursor()
        id = ctx.author.id
        guildID = ctx.guild.id
        c.execute("SELECT voiceID FROM voiceChannel WHERE userID = ?", (id,))
        voice=c.fetchone()
        if voice is None:
            await ctx.channel.send(f"{ctx.author.mention} –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        else:
            channelID = voice[0]
            channel = self.bot.get_channel(channelID)
            for members in channel.members:
                if members.id == member.id:
                    c.execute("SELECT voiceChannelID FROM guild WHERE guildID = ?", (guildID,))
                    voice=c.fetchone()
                    channel2 = self.bot.get_channel(voice[0])
                    await member.move_to(channel2)
            await channel.set_permissions(member, connect=False,read_messages=True)
            await ctx.channel.send(f'{ctx.author.mention} –í—ã –æ–≥—Ä–∞–Ω–∏—á–∏–ª–∏ {member.name} –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É! ‚ùå')
        conn.commit()
        conn.close()



    @–≥–æ–ª–æ—Å.command()
    async def –ª–∏–º–∏—Ç(self, ctx, limit):
        conn = sqlite3.connect('voice.db')
        c = conn.cursor()
        id = ctx.author.id
        c.execute("SELECT voiceID FROM voiceChannel WHERE userID = ?", (id,))
        voice=c.fetchone()
        if voice is None:
            await ctx.channel.send(f"{ctx.author.mention} –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        else:
            channelID = voice[0]
            channel = self.bot.get_channel(channelID)
            await channel.edit(user_limit = limit)
            await ctx.channel.send(f'{ctx.author.mention} –í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ª–∏–º–∏—Ç '+ '{}!'.format(limit))
            c.execute("SELECT channelName FROM userSettings WHERE userID = ?", (id,))
            voice=c.fetchone()
            if voice is None:
                c.execute("INSERT INTO userSettings VALUES (?, ?, ?)", (id,f'{ctx.author.name}',limit))
            else:
                c.execute("UPDATE userSettings SET channelLimit = ? WHERE userID = ?", (limit, id))
        conn.commit()
        conn.close()


    @–≥–æ–ª–æ—Å.command()
    async def –Ω–∞–∑–≤–∞–Ω–∏–µ(self, ctx,*, name):
        conn = sqlite3.connect('voice.db')
        c = conn.cursor()
        id = ctx.author.id
        c.execute("SELECT voiceID FROM voiceChannel WHERE userID = ?", (id,))
        voice=c.fetchone()
        if voice is None:
            await ctx.channel.send(f"{ctx.author.mention} –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        else:
            channelID = voice[0]
            channel = self.bot.get_channel(channelID)
            await channel.edit(name = name)
            await ctx.channel.send(f'{ctx.author.mention} –í—ã –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –Ω–∞ '+ '{}!'.format(name))
            c.execute("SELECT channelName FROM userSettings WHERE userID = ?", (id,))
            voice=c.fetchone()
            if voice is None:
                c.execute("INSERT INTO userSettings VALUES (?, ?, ?)", (id,name,0))
            else:
                c.execute("UPDATE userSettings SET channelName = ? WHERE userID = ?", (name, id))
        conn.commit()
        conn.close()

    @–≥–æ–ª–æ—Å.command()
    async def –ø—Ä–∞–≤–∞(self, ctx):
        x = False
        conn = sqlite3.connect('voice.db')
        c = conn.cursor()
        channel = ctx.author.voice.channel
        if channel == None:
            await ctx.channel.send(f"{ctx.author.mention} –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–∞–Ω–∞–ª–µ!")
        else:
            id = ctx.author.id
            c.execute("SELECT userID FROM voiceChannel WHERE voiceID = ?", (channel.id,))
            voice=c.fetchone()
            if voice is None:
                await ctx.channel.send(f"{ctx.author.mention} –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
            else:
                for data in channel.members:
                    if data.id == voice[0]:
                        owner = ctx.guild.get_member(voice [0])
                        await ctx.channel.send(f"{ctx.author.mention} –í–ª–∞–¥–µ–ª–µ—Ü –¥–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ - {owner.mention}!")
                        x = True
                if x == False:
                    await ctx.channel.send(f"{ctx.author.mention} –í—ã —Ç–µ–ø–µ—Ä—å –≤–ª–∞–¥–µ–ª–µ—Ü –¥–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞!")
                    c.execute("UPDATE voiceChannel SET userID = ? WHERE voiceID = ?", (id, channel.id))
            conn.commit()
            conn.close()


def setup(bot):
    bot.add_cog(voice(bot))
